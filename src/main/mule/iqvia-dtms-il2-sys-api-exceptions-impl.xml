<?xml version="1.0" encoding="UTF-8"?>

<mule
	xmlns:cloudhub="http://www.mulesoft.org/schema/mule/cloudhub"
	xmlns:iqvia="http://www.mulesoft.org/schema/mule/iqvia"
	xmlns:anypoint-mq="http://www.mulesoft.org/schema/mule/anypoint-mq"
	xmlns:apikit="http://www.mulesoft.org/schema/mule/mule-apikit"
	xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns:rwts-iqvia-logging-connector="http://www.mulesoft.org/schema/mule/rwts-iqvia-logging-connector"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/rwts-iqvia-logging-connector http://www.mulesoft.org/schema/mule/rwts-iqvia-logging-connector/current/mule-rwts-iqvia-logging-connector.xsd
http://www.mulesoft.org/schema/mule/anypoint-mq http://www.mulesoft.org/schema/mule/anypoint-mq/current/mule-anypoint-mq.xsd
http://www.mulesoft.org/schema/mule/iqvia http://www.mulesoft.org/schema/mule/iqvia/current/mule-iqvia.xsd
http://www.mulesoft.org/schema/mule/cloudhub http://www.mulesoft.org/schema/mule/cloudhub/current/mule-cloudhub.xsd">
		<sub-flow name="serviceUnavailable_transformation_subFlow"
		doc:id="5c9c3ea0-da93-4d7f-815f-84a12257dd15">
		<ee:transform doc:name="Build Meta Response"
			doc:id="54a64d14-2eab-49c8-8d2a-918b95634afc">
			<ee:message>
				<ee:set-payload resource="dw/503.dwl" />
			</ee:message>
			<ee:variables>
				<ee:set-variable resource="dw/deriveLogException_SAhttpStatus.dwl" variableName="httpStatus"/>
				<ee:set-variable variableName="httpReason"><![CDATA[%dw 2.0
import * from dw::core::Strings
---
if (isBlank(substringAfter(error.description,'Last exception message was:'))) error.errorType.asString else substringAfter(error.description,'Last exception message was:')]]></ee:set-variable>
				<ee:set-variable resource="dw/deriveLogExceptionEventName.dwl" variableName="eventName" />
				<ee:set-variable variableName="tid" ><![CDATA[%dw 2.0
output application/java
---
vars.tid default uuid()]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<iqvia:log-entries doc:name="Log entries" doc:id="709b9985-5bfa-4117-8213-073032343f3c" config-ref="IQVIA_Logging_Connector_Config" eventName="#[vars.eventName]" severity="ERROR" meta="#[{&quot;Callflow&quot;:&quot;Inbound&quot;,&quot;Calltype&quot;:&quot;Response&quot;,&quot;API-Hostname&quot;:server.host,&quot;Response-Code&quot;:vars.httpStatus,&quot;Error-Msg&quot;:payload,&quot;Content-Encoding&quot;:attributes.'Headers'.'Content-Encoding',&quot;Content-Length&quot;:attributes.'Headers'.'Content-Length'}]" transactionId="#[vars.tid]"/>
		<async doc:name="Async" doc:id="2284e4ff-2f3d-4791-aa93-7ed1d7171fa7" >
			<cloudhub:create-notification doc:name="Create Notification" doc:id="f04f35dd-3943-46df-ad01-f592cdcbc838" domain="${secure::cloudhub.appname}" config-ref="CloudHub_Config" priority="ERROR" transactionId="#[vars.tid]">
			<cloudhub:message><![CDATA[#['Error Details::' ++ (vars.eventName default '')]]]></cloudhub:message>
				<cloudhub:custom-properties ><![CDATA[#[output application/java
---
{
	transactionId : vars.tid,
	subject : "Error Notificaition: Service Unavailable " ++ vars.eventName
	
}]]]></cloudhub:custom-properties>
		</cloudhub:create-notification>
		</async>
		<set-variable value="#[payload]" doc:name="Set ErrorInfo"
			doc:id="6d0076d1-6207-4793-ac2e-ae3b777a2f0a"
			variableName="errorInfo" />
		<ee:transform doc:name="Build Error Response"
			doc:id="4e78b134-396f-4f0b-b7f6-1d10eb43ac65">
			<ee:message>
				<ee:set-payload resource="dw/buildResponse_503.dwl" />
			</ee:message>
			<ee:variables>
				<ee:set-variable resource="dw/deriveLogException_SAhttpStatus.dwl" variableName="httpStatus"/>
				<ee:set-variable variableName="httpReason"><![CDATA[%dw 2.0
import * from dw::core::Strings
---
if (isBlank(substringAfter(error.description,'Last exception message was:'))) error.errorType.asString else substringAfter(error.description,'Last exception message was:')

]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="07800b4e-3980-4755-a5d1-32b1480ff021" message="Exception processing completed"/>
	</sub-flow>
	<sub-flow name="internalServerError_transformation_subFlow"
		doc:id="b1c6c5f8-5c19-4f4c-a788-93e27a1525e7">
		<ee:transform doc:name="Build Meta Response"
			doc:id="d6150343-2e49-4eda-9e7a-12257481871c">
			<ee:message>
				<ee:set-payload resource="dw/500.dwl" />
			</ee:message>
			<ee:variables>
				<ee:set-variable resource="dw/deriveLogException_IShttpStatus.dwl" variableName="httpStatus"/>
				<ee:set-variable variableName="httpReason"><![CDATA[error.errorType.asString]]></ee:set-variable>
				<ee:set-variable resource="dw/deriveLogExceptionEventName.dwl" variableName="eventName" />
			</ee:variables>
		</ee:transform>
		<iqvia:log-entries doc:name="Log entries" doc:id="b1f2cfb0-7a15-4dd6-af39-a50448fdecf1" config-ref="IQVIA_Logging_Connector_Config" eventName="#[vars.eventName]" meta="#[{&quot;Callflow&quot;:&quot;Inbound&quot;,&quot;Calltype&quot;:&quot;Response&quot;,&quot;API-Hostname&quot;:server.host,&quot;Response-Code&quot;:vars.httpStatus,&quot;Error-Msg&quot;:payload,&quot;Content-Encoding&quot;:attributes.'Headers'.'Content-Encoding',&quot;Content-Length&quot;:attributes.'Headers'.'Content-Length'}]" severity="ERROR" transactionId="#[vars.tid]"/>
		<async doc:name="Async"
			doc:id="eed99e15-9359-4e00-ae75-a7435e7cc151">
			<cloudhub:create-notification
				doc:name="Create Notification"
				doc:id="f154ddbb-cbbb-4c1b-a58c-ece7ea828c6a"
				config-ref="CloudHub_Config" domain="${secure::cloudhub.appname}"
				priority="ERROR" transactionId="#[vars.tid]">
				<cloudhub:message><![CDATA[#['Error Details::' ++ (vars.eventName default '') ++ ' , Application Name ::' ++ p('secure::cloudhub.appname') ++ ' ,Error Request TransactionId ::' ++ ( vars.tid default '')]]]></cloudhub:message>
				<cloudhub:custom-properties ><![CDATA[#[output application/java
---
{
	transactionId : vars.tid
}]]]></cloudhub:custom-properties>
			</cloudhub:create-notification>
		</async>
		<set-variable value="#[payload]" doc:name="Set ErrorInfo"
			doc:id="0879e377-51e8-4743-a0f2-54263276ad27"
			variableName="errorInfo" />
		<ee:transform doc:name="Build Error Response"
			doc:id="cefac7c0-b910-4b45-9629-4dc50d0404b5">
			<ee:message>
				<ee:set-payload resource="dw/buildResponse_500.dwl" />
			</ee:message>
			<ee:variables>
				<ee:set-variable resource="dw/deriveLogException_IShttpStatus.dwl" variableName="httpStatus"/>
				<ee:set-variable variableName="httpReason"><![CDATA[error.errorType.asString]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
	</sub-flow>
<error-handler name="apiKit_Handler">
		<on-error-propagate type="APIKIT:BAD_REQUEST"
			enableNotifications="true" logException="true">
			<ee:transform
				xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd"
				doc:id="a0959a63-5eec-4357-b050-03dbb7f0ecc5" doc:name="Build Error Response">
				<ee:message>
					<ee:set-payload resource="dw/400.dwl" />
				</ee:message>
				<ee:variables>
					<ee:set-variable variableName="httpStatus"><![CDATA[p('exception.badRequest.errorCode')]]></ee:set-variable>
					<ee:set-variable variableName="httpReason"><![CDATA[p('exception.badRequest.errorDescription')]]></ee:set-variable>
				</ee:variables>
			</ee:transform>
			<iqvia:log-entries doc:name="Log entries" doc:id="9134c359-5f59-4301-81db-6497764ad67f" config-ref="IQVIA_Logging_Connector_Config" severity="ERROR" meta="#[{&quot;Callflow&quot;:&quot;Inbound&quot;,&quot;Calltype&quot;:&quot;Response&quot;,&quot;API-Hostname&quot;:server.host,&quot;Response-Code&quot;:vars.httpStatus,&quot;Error-Msg&quot;:payload,&quot;Content-Encoding&quot;:attributes.'Headers'.'Content-Encoding',&quot;Content-Length&quot;:attributes.'Headers'.'Content-Length'}]" eventName="#['Bad request']" transactionId="#[vars.tid]"/>
			<ee:transform doc:name="Transform Message"
				doc:id="90cb8d5b-8c38-4faf-97aa-4b12caa646d7">
				<ee:message>
					<ee:set-payload resource="dw/buildResponse_400.dwl" />
				</ee:message>
				<ee:variables>
					<ee:set-variable variableName="httpStatus"><![CDATA[p('exception.badRequest.errorCode')]]></ee:set-variable>
					<ee:set-variable variableName="httpReason"><![CDATA[p('exception.badRequest.errorDescription')]]></ee:set-variable>
				</ee:variables>
			</ee:transform>
		</on-error-propagate>
		<on-error-propagate type="APIKIT:NOT_FOUND">
			<ee:transform
				xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd"
				doc:id="6734eaf9-ccc5-4dab-85ec-073fed577708" doc:name="Build Meta Response">
				<ee:message>
					<ee:set-payload resource="dw/404.dwl" />
				</ee:message>
				<ee:variables>
					<ee:set-variable variableName="httpStatus"><![CDATA[p('exception.notFound.errorCode')]]></ee:set-variable>
					<ee:set-variable variableName="httpReason"><![CDATA[p('exception.notFound.errorDescription')]]></ee:set-variable>
				</ee:variables>
			</ee:transform>
			<iqvia:log-entries doc:name="Log entries" doc:id="aa601c4a-9e25-453d-99f3-644c80ee3b4b" config-ref="IQVIA_Logging_Connector_Config" severity="ERROR" meta="#[{&quot;Callflow&quot;:&quot;Inbound&quot;,&quot;Calltype&quot;:&quot;Response&quot;,&quot;API-Hostname&quot;:server.host,&quot;Response-Code&quot;:vars.httpStatus,&quot;Error-Msg&quot;:payload,&quot;Content-Encoding&quot;:attributes.'Headers'.'Content-Encoding',&quot;Content-Length&quot;:attributes.'Headers'.'Content-Length'}]" eventName="#['Resource not found']" transactionId="#[vars.tid]"/>
			<ee:transform doc:name="Build Error Response"
				doc:id="161fe07a-1719-4a82-9d72-586ae7278a28">
				<ee:message>
					<ee:set-payload resource="dw/buildResponse_404.dwl" />
				</ee:message>
				<ee:variables>
					<ee:set-variable variableName="httpStatus"><![CDATA[p('exception.notFound.errorCode')]]></ee:set-variable>
					<ee:set-variable variableName="httpReason"><![CDATA[p('exception.notFound.errorDescription')]]></ee:set-variable>
				</ee:variables>
			</ee:transform>
		</on-error-propagate>
		<on-error-propagate type="APIKIT:METHOD_NOT_ALLOWED">
			<ee:transform
				xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd"
				doc:id="ee857e61-151f-4475-a1bd-cdf0ca68ae1d" doc:name="Build Meta Response">
				<ee:message>
					<ee:set-payload resource="dw/405.dwl" />
				</ee:message>
				<ee:variables>
					<ee:set-variable variableName="httpStatus"><![CDATA[p('exception.methodNotAllowed.errorCode')]]></ee:set-variable>
					<ee:set-variable variableName="httpReason"><![CDATA[p('exception.methodNotAllowed.errorDescription')]]></ee:set-variable>
				</ee:variables>
			</ee:transform>
			<iqvia:log-entries doc:name="Log entries" doc:id="66719508-9a69-4330-9739-1bfb45269a58" config-ref="IQVIA_Logging_Connector_Config" eventName="#['Method not allowed']" severity="ERROR" meta="#[{&quot;Callflow&quot;:&quot;Inbound&quot;,&quot;Calltype&quot;:&quot;Response&quot;,&quot;API-Hostname&quot;:server.host,&quot;Response-Code&quot;:vars.httpStatus,&quot;Error-Msg&quot;:payload,&quot;Content-Encoding&quot;:attributes.'Headers'.'Content-Encoding',&quot;Content-Length&quot;:attributes.'Headers'.'Content-Length'}]" transactionId="#[vars.tid]"/>
			<ee:transform xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd"
			doc:name="Build Error Response"				doc:id="3fa8e17e-36fa-4501-a0da-bd2f6160f74c">
				<ee:message>
					<ee:set-payload resource="dw/buildResponse_405.dwl" />
				</ee:message>
				<ee:variables>
					<ee:set-variable variableName="httpStatus"><![CDATA[p('exception.methodNotAllowed.errorCode')]]></ee:set-variable>
					<ee:set-variable variableName="httpReason"><![CDATA[p('exception.methodNotAllowed.errorDescription')]]></ee:set-variable>
				</ee:variables>
			</ee:transform>
		</on-error-propagate>
		<on-error-propagate type="APIKIT:NOT_ACCEPTABLE">
			<ee:transform
				xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd"
				doc:id="7d61befd-9f73-4fba-806b-26df8f652db2" doc:name="Build Meta Response">
				<ee:message>
					<ee:set-payload resource="dw/406.dwl" />
				</ee:message>
				<ee:variables>
					<ee:set-variable variableName="httpStatus"><![CDATA[p('exception.notAcceptable.errorCode')]]></ee:set-variable>
					<ee:set-variable variableName="httpReason"><![CDATA[p('exception.notAcceptable.errorDescription')]]></ee:set-variable>
				</ee:variables>
			</ee:transform>
			<iqvia:log-entries doc:name="Log entries" doc:id="6f8622d0-df74-40c4-bfc2-47b03bc683db" config-ref="IQVIA_Logging_Connector_Config" eventName="#['Not acceptable']" severity="ERROR" meta="#[{&quot;Callflow&quot;:&quot;Inbound&quot;,&quot;Calltype&quot;:&quot;Response&quot;,&quot;API-Hostname&quot;:server.host,&quot;Response-Code&quot;:vars.httpStatus,&quot;Error-Msg&quot;:payload,&quot;Content-Encoding&quot;:attributes.'Headers'.'Content-Encoding',&quot;Content-Length&quot;:attributes.'Headers'.'Content-Length'}]" transactionId="#[vars.tid]"/>
			<ee:transform doc:name="Build Error Response"
				doc:id="ff4ddf02-2caa-41fd-9fde-bff65cce2b35">
				<ee:message>
					<ee:set-payload resource="dw/buildResponse_406.dwl" />
				</ee:message>
				<ee:variables>
					<ee:set-variable variableName="httpStatus"><![CDATA[p('exception.notAcceptable.errorCode')]]></ee:set-variable>
					<ee:set-variable variableName="httpReason"><![CDATA[p('exception.notAcceptable.errorDescription')]]></ee:set-variable>
				</ee:variables>
			</ee:transform>
		</on-error-propagate>
		<on-error-propagate type="APIKIT:UNSUPPORTED_MEDIA_TYPE">
			<ee:transform
				xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd"
				doc:id="f5f2b169-e3b5-4ba2-94e8-c75ecfe658c5" doc:name="Build Meta Response">
				<ee:message>
					<ee:set-payload resource="dw/415.dwl" />
				</ee:message>
				<ee:variables>
					<ee:set-variable variableName="httpStatus"><![CDATA[p('exception.unsupportedMediaType.errorCode')]]></ee:set-variable>
					<ee:set-variable variableName="httpReason"><![CDATA[p('exception.unsupportedMediaType.errorDescription')]]></ee:set-variable>
				</ee:variables>
			</ee:transform>
			<iqvia:log-entries doc:name="Log entries" doc:id="b0c73bd6-2f1c-40d1-a4da-b3a77ce7c373" config-ref="IQVIA_Logging_Connector_Config" severity="ERROR" meta="#[{&quot;Callflow&quot;:&quot;Inbound&quot;,&quot;Calltype&quot;:&quot;Response&quot;,&quot;API-Hostname&quot;:server.host,&quot;Response-Code&quot;:vars.httpStatus,&quot;Error-Msg&quot;:payload,&quot;Content-Encoding&quot;:attributes.'Headers'.'Content-Encoding',&quot;Content-Length&quot;:attributes.'Headers'.'Content-Length'}]" eventName="#['Unsupported media type']" transactionId="#[vars.tid]"/>
			<ee:transform doc:name="Build Error Response"
				doc:id="1ebce48f-e215-4cdd-be74-6532b98be40c">
				<ee:message>
					<ee:set-payload resource="dw/buildResponse_415.dwl" />
				</ee:message>
				<ee:variables>
					<ee:set-variable variableName="httpStatus"><![CDATA[p('exception.unsupportedMediaType.errorCode')]]></ee:set-variable>
					<ee:set-variable variableName="httpReason"><![CDATA[p('exception.unsupportedMediaType.errorDescription')]]></ee:set-variable>
				</ee:variables>
			</ee:transform>
		</on-error-propagate>
		<on-error-propagate type="APIKIT:NOT_IMPLEMENTED"
			enableNotifications="true" logException="true">
			<ee:transform
				xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd"
				doc:id="54da3693-7db8-4b70-8f23-f0043181140c" doc:name="Build Meta Response">
				<ee:message>
					<ee:set-payload resource="dw/501.dwl" />
				</ee:message>
				<ee:variables>
					<ee:set-variable variableName="httpStatus"><![CDATA[p('exception.notImplemented.errorCode')]]></ee:set-variable>
					<ee:set-variable variableName="httpReason"><![CDATA[p('exception.notImplemented.errorDescription')]]></ee:set-variable>
				</ee:variables>
			</ee:transform>
			<iqvia:log-entries doc:name="Log entries" doc:id="2b6a5595-8dce-4d01-b335-e90710ab1018" config-ref="IQVIA_Logging_Connector_Config" eventName="#['Not implemented']" severity="ERROR" meta="#[{&quot;Callflow&quot;:&quot;Inbound&quot;,&quot;Calltype&quot;:&quot;Response&quot;,&quot;API-Hostname&quot;:server.host,&quot;Response-Code&quot;:vars.httpStatus,&quot;Error-Msg&quot;:payload,&quot;Content-Encoding&quot;:attributes.'Headers'.'Content-Encoding',&quot;Content-Length&quot;:attributes.'Headers'.'Content-Length'}]" transactionId="#[vars.tid]"/>
			<ee:transform doc:name="Build Error Response"
				doc:id="852a03ad-fb0d-4a8d-a68e-d052473e18ba">
				<ee:message>
					<ee:set-payload resource="dw/buildResponse_501.dwl" />
				</ee:message>
				<ee:variables>
					<ee:set-variable variableName="httpStatus"><![CDATA[p('exception.notImplemented.errorCode')]]></ee:set-variable>
					<ee:set-variable variableName="httpReason"><![CDATA[p('exception.notImplemented.errorDescription')]]></ee:set-variable>
				</ee:variables>
			</ee:transform>
		</on-error-propagate>
	</error-handler>


	<error-handler name="commonError_Handler"
		doc:id="aee81351-5157-445f-837f-580ae83db8cd">

		<on-error-propagate enableNotifications="true"
			logException="true" doc:name="On Error Propagate"
			doc:id="f8d13bec-fdb9-41a1-8e92-ab436d7a12d1"
			when="#['TRANSFORMATION' == error.errorType.identifier]">
			<flow-ref
				doc:name="internalServerError_transformation_subFlow"
				doc:id="d8fc0bad-7ea0-434c-b693-16b8f063ff23"
				name="internalServerError_transformation_subFlow" />
		</on-error-propagate>
		
			<on-error-propagate enableNotifications="true"
			logException="true" doc:name="On Error Propagate"
			doc:id="66befe88-a65b-4d23-837c-77d0196ae6dd"
			when="#['VALIDATION' == error.errorType.namespace]">
			<flow-ref
				doc:name="internalServerError_transformation_subFlow"
				doc:id="be8293a0-d7d0-4af8-917f-2411e7702f66"
				name="internalServerError_transformation_subFlow" />
		</on-error-propagate>
		
		<on-error-propagate enableNotifications="true"
			logException="true" doc:name="On Error Propagate"
			doc:id="79f7605b-eae3-402d-bb93-2111760e0338"
			when="#['DB' == error.errorType.namespace]">
			<flow-ref
				doc:name="internalServerError_transformation_subFlow"
				doc:id="2aada69e-dc0f-4b47-a861-1fcbd5865479"
				name="internalServerError_transformation_subFlow" />
		</on-error-propagate>

		<on-error-propagate enableNotifications="true"
			logException="true" doc:name="On Error Propagate"
			doc:id="1a751b07-71ba-477a-a2b3-e357a1fd6d41"
			when="#['ROUTING' == error.errorType.identifier]">
			<flow-ref
				doc:name="internalServerError_transformation_subFlow"
				doc:id="5d14d35e-7b88-4400-8639-e3712e06a690"
				name="internalServerError_transformation_subFlow" />
		</on-error-propagate>

		<on-error-propagate enableNotifications="true"
			logException="true" doc:name="On Error Propagate"
			doc:id="316c68b0-b6ab-4b01-a885-f367f3c49777"
			when="#['CONNECTIVITY' == error.errorType.identifier]">
			<flow-ref
				doc:name="serviceUnavailable_transformation_subFlow"
				doc:id="b74afcf1-a957-4a74-9690-415d1321cb20"
				name="internalServerError_transformation_subFlow" />
		</on-error-propagate>

		<on-error-propagate enableNotifications="true"
			logException="true" doc:name="On Error Propagate"
			doc:id="e65ad550-3eee-4501-a912-5be0ecb2ebcd"
			when="#['EXPRESSION' == error.errorType.identifier]">
			<flow-ref
				doc:name="internalServerError_transformation_subFlow"
				doc:id="43f15fdf-b9b0-4321-bc6f-82f69d5abbfd"
				name="internalServerError_transformation_subFlow" />
		</on-error-propagate>

		<on-error-propagate enableNotifications="true"
			logException="true" doc:name="On Error Propagate"
			doc:id="83fc7e97-81ac-4568-805d-91820ad7503c"
			when="#['SECURITY' == error.errorType.identifier]">
			<flow-ref
				doc:name="internalServerError_transformation_subFlow"
				doc:id="c72eec00-ac2d-4681-85e5-7e87cfcc6b5b"
				name="internalServerError_transformation_subFlow" />
		</on-error-propagate>

		<on-error-propagate enableNotifications="true"
			logException="true" doc:name="On Error Propagate"
			doc:id="9cd15459-8722-48de-a3d3-4eca1e980a59"
			when="#['FATAL' == error.errorType.identifier]">
			<flow-ref
				doc:name="internalServerError_transformation_subFlow"
				doc:id="bcd22346-2fdc-4d4a-b807-27ee017e692a"
				name="internalServerError_transformation_subFlow" />
		</on-error-propagate>

		<on-error-propagate enableNotifications="true"
			logException="true" doc:name="On Error Propagate"
			doc:id="ce0c24d0-1f8a-4a5b-983b-61f8b114c12c"
			when="#['OVERLOAD' == error.errorType.identifier]">
			<flow-ref
				doc:name="internalServerError_transformation_subFlow"
				doc:id="f8b02db5-1909-4520-9bfc-2a760e4066d1"
				name="internalServerError_transformation_subFlow" />
		</on-error-propagate>

		<on-error-propagate enableNotifications="true"
			logException="true" doc:name="On Error Propagate"
			doc:id="4f6a1e40-c424-4b31-a418-5def344c0e95"
			when="#['UNKNOWN' == error.errorType.identifier]">
			<flow-ref
				doc:name="internalServerError_transformation_subFlow"
				doc:id="9c7e1ebb-0399-48ad-ae24-c15fd671dd7f"
				name="internalServerError_transformation_subFlow" />
		</on-error-propagate>

		<on-error-propagate enableNotifications="true"
			logException="true" doc:name="On Error Propagate"
			doc:id="69118303-001f-4521-9b50-f9ff55f4da4c"
			when="#['TIMEOUT' == error.errorType.identifier]">
			<flow-ref
				doc:name="serviceUnavailable_transformation_subFlow"
				doc:id="f26eeb8c-a400-4017-9941-4410dff45a67"
				name="serviceUnavailable_transformation_subFlow" />
		</on-error-propagate>

		<on-error-propagate enableNotifications="true"
			logException="true" doc:name="On Error Propagate"
			doc:id="0adef340-1ab5-45c0-a621-6d90031adb5c"
			when="#['RETRY_EXHAUSTED' == error.errorType.identifier]">
			<flow-ref
				doc:name="serviceUnavailable_transformation_subFlow"
				doc:id="16c32e99-7a3e-4f70-9602-87cc030c0e11"
				name="serviceUnavailable_transformation_subFlow" />
		</on-error-propagate>

		<on-error-propagate enableNotifications="true"
			logException="true" doc:name="On Error Propagate"
			doc:id="e8a82083-99fb-4fd2-a675-ca96d7f70bc8"
			when="#['SERVICE_UNAVAILABLE' == error.errorType.identifier]">
			<flow-ref
				doc:name="serviceUnavailable_transformation_subFlow"
				doc:id="e9c17c65-5f01-4ab8-894b-6d5078063dae"
				name="serviceUnavailable_transformation_subFlow" />
		</on-error-propagate>

		<on-error-propagate enableNotifications="true"
			logException="true" doc:name="On Error Propagate"
			doc:id="56e3c4a4-8933-4237-ad77-e9f81522b714"
			when="#['TOO_MANY_REQUESTS' == error.errorType.identifier]">
			<flow-ref
				doc:name="internalServerError_transformation_subFlow"
				doc:id="d5536c8d-34fb-4fe8-8398-9d3cf84408b6"
				name="internalServerError_transformation_subFlow" />
		</on-error-propagate>

		<on-error-propagate enableNotifications="true"
			logException="true" doc:name="On Error Propagate"
			doc:id="1306cc8e-817d-4741-9c15-af4cf44ec322"
			when="#['FORBIDDEN' == error.errorType.identifier]">
			<flow-ref
				doc:name="internalServerError_transformation_subFlow"
				doc:id="aca5fb8d-0d8f-4661-aae4-70124afaed69"
				name="internalServerError_transformation_subFlow" />
		</on-error-propagate>

		<on-error-propagate enableNotifications="true"
			logException="true" doc:name="On Error Propagate"
			doc:id="7d1467d6-df1d-42b0-9f84-e81c76dc485e"
			when="#['UNAUTHORIZED' == error.errorType.identifier]">
			<flow-ref
				doc:name="internalServerError_transformation_subFlow"
				doc:id="cc969d70-6c1f-4a1c-9be2-1be19de29412"
				name="internalServerError_transformation_subFlow" />
		</on-error-propagate>

		<on-error-propagate enableNotifications="true"
			logException="true" doc:name="On Error Propagate"
			doc:id="d5d2e7fb-30a8-4ad6-9c75-4a019f3eee85"
			when="#['PARSING' == error.errorType.identifier]">
			<flow-ref
				doc:name="internalServerError_transformation_subFlow"
				doc:id="4f9024e5-7b71-4fe6-bf3a-8121b643b576"
				name="internalServerError_transformation_subFlow" />
		</on-error-propagate>

		<on-error-propagate enableNotifications="true"
			logException="true" doc:name="On Error Propagate"
			doc:id="e86b6b70-bbc1-41b4-a857-3e26da21b658" type="ANY">
			<flow-ref
				doc:name="internalServerError_transformation_subFlow"
				doc:id="509a27bc-2dfb-493e-8e00-c5966296f8c9"
				name="internalServerError_transformation_subFlow" />
		</on-error-propagate>

	</error-handler>
</mule>
